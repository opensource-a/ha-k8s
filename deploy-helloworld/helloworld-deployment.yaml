apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-kubernetes-hello-world
spec:
  replicas: 1
  selector:
    matchLabels:
        app: hello-kubernetes-hello-world
        tier: frontend
  template:
    metadata:
      labels:
        app: hello-kubernetes-hello-world
        tier: frontend
    spec:
      imagePullSecrets:
        - name: regcred    
      containers:
      - name: hello-kubernetes-hello-world
        image: paulbouwer/hello-kubernetes:1.10
        imagePullPolicy: Always
        env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CONTAINER_IMAGE
          value: test
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 8080
---

apiVersion: v1
kind: Service
metadata:
  name: hello-kubernetes-hello-world
  labels:
    app: hello-kubernetes-hello-world
    tier: frontend
spec:
  # if your cluster supports it, uncomment the following to automatically create
  # an external load-balanced IP for the frontend service.
  # type: LoadBalancer
  #type: LoadBalancer
  ports:
    # the port that this service should serve on
  - port: 80
    targetPort: 8080
  selector:
    app: hello-kubernetes-hello-world
    tier: frontend
